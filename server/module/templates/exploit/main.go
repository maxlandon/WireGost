package exploit // Rename this with module (directory) name

import "github.com/maxlandon/wiregost/server/module"

// Module - Wiregost exploitation module.
type Module struct {
	// The module embeds (inherits from) a module.Exploit type.
	// This type (by embedding itself a module.Module base type that you don't see here) gives you
	// access to the server's logging and event system, provides various utility methods for querying
	// options, and performs automatic and serialized safety checks, stack-side or server-side.
	*module.Exploit
}

// Run - Execute the module, with optional command for specifying actions to take, and parameters
// for handling or other details. Processing these args is left at the author's discretion.
func (m *Module) Run(cmd string, args []string) (result string, err error) {

	// ALTERNATIVE 1: Use switch to handle cmd
	// Switch on console provided command: it has already been checked valid by the server.
	switch cmd {
	case "check":
		// We might have a function/method Check() handling this case and its subcases.
	case "exploit":
		// We might have a function/method Exploit() performing the exploit/action.
	}
	return "Status message for end of module execution", nil
}
